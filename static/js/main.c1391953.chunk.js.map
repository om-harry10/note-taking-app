{"version":3,"sources":["logo.svg","Components/Noteify.js","App.js","reportWebVitals.js","index.js"],"names":["Noteify","useState","title","description","note","setNote","notes","setNotes","setPosted","handleChange","event","target","name","value","prevNote","className","TextField","onChange","color","label","size","variant","rows","Button","style","margin","borderRadius","onClick","e","preventDefault","axios","post","then","response","console","log","fetch","json","data","catch","error","Add","map","item","id","created_at","noteId","window","confirm","method","prevNotes","filter","index","handleDelete","Delete","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,I,yFC2IAA,MApIf,WACE,MAAwBC,mBAAS,CAC/BC,MAAO,GACPC,YAAa,KAFf,mBAAOC,EAAP,KAAaC,EAAb,KAIA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA4BN,oBAAS,GAArC,mBAAeO,GAAf,WAMMC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdR,GAAQ,SAACS,GACP,OAAO,2BACFA,GADL,kBAEGF,EAAOC,QAkDd,OACE,gCACE,iCACE,oBAAIE,UAAU,SAAd,uBAEF,qBAAKA,UAAU,QAAf,SACE,iCACE,cAACC,EAAA,EAAD,CACED,UAAU,YACVH,KAAK,QACLC,MAAOT,EAAKF,MACZe,SAAUR,EACVS,MAAM,YACNC,MAAM,QACNC,KAAK,SACLC,QAAQ,aAEV,uBACA,uBACA,cAACL,EAAA,EAAD,CACEJ,KAAK,cACLC,MAAOT,EAAKD,YACZc,SAAUR,EACVU,MAAM,oBACNG,KAAK,IACLJ,MAAM,YAENG,QAAQ,aAEV,uBACA,uBACA,eAACE,EAAA,EAAD,CACEL,MAAM,UACNG,QAAQ,YACRD,KAAK,QACLI,MAAO,CAAEC,OAAQ,YAAaC,aAAa,QAC3CC,QA5DO,SAACC,GAChBA,EAAEC,iBACFC,IAAMC,KAAK,iDAAiD3B,GAC3D4B,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZzB,GAAU,MAEXwB,MAAK,WACHI,MAAM,mDACNJ,MAAK,SAAAC,GAAQ,OAAIA,EAASI,UAC1BL,MAAK,SAAAM,GACQ/B,EAAS+B,EAAKA,KAAKhC,aAIlCiC,OAAM,SAAAC,GACLN,QAAQC,IAAIK,MAEdnC,EAAQ,CACNH,MAAO,GACPC,YAAa,MAmCT,UAOE,cAACsC,EAAA,EAAD,IACA,iDAKLnC,EAAMoC,KAAI,SAACC,EAAKC,GAGX,OACA,sBAAM7B,UAAU,OAAhB,UACE,6BAAK4B,EAAKzC,QACV,4BAAIyC,EAAKxC,cACT,4BAAIwC,EAAKE,aACX,wBAAQlB,QAAS,kBAhGJ,SAACmB,EAAOF,GACxBG,OAAOC,QAAQ,0CAChBZ,MAAM,kDAAkDU,EAAQ,CAC9DG,OAAQ,WAETjB,MAAK,WACJzB,GAAS,SAAC2C,GACR,OAAOA,EAAUC,QAAO,SAACR,EAAMS,GAC7B,OAAOA,IAAUR,WAwFIS,CAAaV,EAAKC,GAAGA,IAA5C,SAAiD,cAACU,EAAA,EAAD,gBCjH9CC,MARf,WACE,OACE,8BACG,cAAC,EAAD,OCIQC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c1391953.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState,useEffect } from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport { Delete, Add } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from 'axios';\r\n\r\nfunction Noteify() {\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const [notes, setNotes] = useState([]);\r\n  const [posted, setPosted] = useState(false);\r\n  \r\n  \r\n\r\n  \r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setNote((prevNote) => {\r\n      return {\r\n        ...prevNote,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  \r\n  \r\n    const handleDelete = (noteId,id) => {\r\n      if(window.confirm('Are you sure yoy want to delete note?')){\r\n        fetch('https://reminders-task.hiring.durbin.live/note/'+noteId, {\r\n          method: 'DELETE'\r\n        })\r\n        .then(()=>{\r\n          setNotes((prevNotes) => {\r\n            return prevNotes.filter((item, index) => {\r\n              return index !== id;\r\n            });\r\n          });            \r\n                    \r\n        })\r\n        \r\n      }\r\n      \r\n    };\r\n  \r\n \r\n  \r\n  const postData=  (e)=>{\r\n    e.preventDefault();\r\n    axios.post('https://reminders-task.hiring.durbin.live/note',note)\r\n    .then(response=>{\r\n      console.log(response)\r\n      setPosted(true);\r\n    })\r\n    .then(()=>{\r\n       fetch('https://reminders-task.hiring.durbin.live/notes')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n                    setNotes(data.data.notes);\r\n                   \r\n                });\r\n    })\r\n    .catch(error=>{\r\n      console.log(error)\r\n    })\r\n    setNote({\r\n      title: \"\",\r\n      description: \"\",\r\n    });\r\n     \r\n  }\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1 className=\"header\">Noteify</h1>\r\n      </header>\r\n      <div className=\"input\">\r\n        <form>\r\n          <TextField\r\n            className=\"textField\"\r\n            name=\"title\"\r\n            value={note.title}\r\n            onChange={handleChange}\r\n            color=\"secondary\"\r\n            label=\"Title\"\r\n            size=\"medium\"\r\n            variant=\"outlined\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <TextField\r\n            name=\"description\"\r\n            value={note.description}\r\n            onChange={handleChange}\r\n            label=\"Enter description\"\r\n            rows=\"3\"\r\n            color=\"secondary\"\r\n            \r\n            variant=\"outlined\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            style={{ margin: \"20px 40px\", borderRadius:'15px' }}\r\n            onClick={postData}\r\n          >\r\n            <Add/>\r\n            <p>Add Note</p>\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    \r\n      {notes.map((item,id) => {\r\n         \r\n          \r\n            return(\r\n            <div  className=\"note\">\r\n              <h1>{item.title}</h1>\r\n              <p>{item.description}</p>\r\n              <p>{item.created_at}</p>\r\n            <button onClick={() => handleDelete(item.id,id)}><Delete/></button>\r\n          </div>);}\r\n          \r\n            \r\n         \r\n        \r\n      )}\r\n          \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Noteify;\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport Noteify from './Components/Noteify';\n\nfunction App() {\n  return (\n    <div >\n       <Noteify/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}